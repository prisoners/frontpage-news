<% s="" %>
<% m=@article.visitors.size %>
<% @article.visitors.each_with_index do |visitor,i| %>
  <% if i != 0 %>
    <% s <<",{lat: #{visitor.latitude.round(4)}, lng: #{visitor.longitude.round(4)}, count: #{visitor.weight.to_i}}" %>
  <% else %>
    <% s << "{lat: #{visitor.latitude.round(4)}, lng: #{visitor.longitude.round(4)}, count: #{visitor.weight.to_i}}" %>
  <% end %>
<% end %>

<div class="row-fluid">
  <div class="span9">
    <div class="row-fluid">
    <h1> <%= @article.title %></h1>
    <p><small class="pull-left">
    	<%= @article.author %>
       </small>
       <small class="pull-right">
       	<%= @article.date %>
       </small>
    </p>
    </div>
    <div class="row-fluid">
    <div id="heatmapArea" class="well pull-left" style="width:610px;padding:0;height:400px;cursor:pointer;position:relative;margin:20px;"></div>
      <p><%= @article.content.gsub(/^(.*)$/, '<p>\1</p>').html_safe%></p>
    </div>
  </div>
  <div class="span3">
    <!--<a href="#myModal" role="button" class="btn" data-toggle="modal">Launch influence map</a>-->
    <div id="Lat"></div>
    <div id="Long"></div>
    <div>
      <h1>People here </h1>
      <ul>
      <% @article.articletags.each do |tag| %>
        <% person=Tag.find(tag.tag_id) %>
        <% if person.typetext=="person" %>
         <li><%= person.tagtext %>&nbsp;&nbsp;&nbsp;Mentioned <%= tag.weight %> times</li>
        <% end %>
      <% end %>
      <h1>News started at </h1>
      <ul>
      <% @article.articletags.each do |tag| %>
        <% place=Tag.find(tag.tag_id) %>
        <% if place.typetext=="location" %>
         <li><%= place.tagtext %>&nbsp;&nbsp;&nbsp;Mentioned <%= tag.weight %> times</li>
        <% end %>
      <% end %>
  </div>


    

    


</div>
<!--
<script type="text/javascript" src="https://raw.github.com/pa7/heatmap.js/master/src/heatmap.js"></script>
<script type="text/javascript" src="https://raw.github.com/pa7/heatmap.js/master/src/heatmap-gmaps.js"></script>-->
<script type="text/javascript">
function createTimer(x,heatmap,i) {
    setTimeout(function() {
        heatmap.addDataPoint(x.lat,x.lng,x.count);
    }, 1000*i);
}

window.onload = function(){
    // standard gmaps initialization
    var myLatlng = new google.maps.LatLng(28.3333, 76.35);
    // define map properties
    var myOptions = {
      zoom: 3,
      center: myLatlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      disableDefaultUI: false,
      scrollwheel: true,
      draggable: true,
      navigationControl: true,
      mapTypeControl: false,
      scaleControl: true,
      disableDoubleClickZoom: false
    };
    // we'll use the heatmapArea 
    var map = new google.maps.Map($("#heatmapArea")[0], myOptions);
    
    // let's create a heatmap-overlay
    // with heatmap config properties
    var heatmap = new HeatmapOverlay(map, {
        "radius":20,
        "visible":true, 
        "opacity":60
    });
 
    // here is our dataset
    // important: a datapoint now contains lat, lng and count property!
    var testData={
            max: 1,
            data: []
    };
 
    // now we can set the data
    google.maps.event.addListenerOnce(map, "idle", function(){
        // this is important, because if you set the data set too early, the latlng/pixel projection doesn't work
          heatmap.setDataSet(testData);
          x=[<%= s %>];
          for (var i=0;i< <%= m %>;i++) {
            console.log (x[i].lat,x[i].lng,x[i].count)
            createTimer(x[i],heatmap,i);
          }
    });
 
};
</script>
<script type="text/javascript">
(function() {
  $(function() {
    var Geo, error, populateHeader, success;
    success = function(position) {
      Geo.lat = position.coords.latitude;
      Geo.lng = position.coords.longitude;
      return populateHeader(Geo.lat, Geo.lng);
    };
    error = function() {
      return console.log("Geocoder failed");
    };
    populateHeader = function(lat, lng) {
      setTimeout(function() {
       $.ajax({ url: '<%= "/articles/#{@article.id}/record_visit?"%>' +"lat="+lat +"&long="+ lng});},25000);
    };
    Geo = {};
    if (navigator.geolocation) {
      return navigator.geolocation.getCurrentPosition(success, error);
    }
  });

}).call(this);


</script>
